#!/bin/bash

### variables & functions
# resolve currentDirectory even if symlink
source="${BASH_SOURCE[0]}"
while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
  currentDirectory="$( cd -P "$( dirname "$source" )" && pwd )"
  source="$(readlink "$source")"
  [[ $source != /* ]] && source="$currentDirectory/$source" # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
workingDir="$( cd -P "$( dirname "$source" )" && pwd )"

#-------------------------------------------------------------
# Exporting paths
#-------------------------------------------------------------
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH

# dotfiles
export PATH=$workingDir/scripts:$PATH
export PATH=$workingDir/bin:$PATH
export PATH=$workingDir/bin/work:$PATH

if isMacOs ; then
  # to avoid locale warning over ssh
  export LANG="en_US.UTF-8"
  export LC_ALL="en_US.UTF-8"
  
  export PATH=/Applications:$PATH
  
  # Apps homes generated by Brew/Cask
  source $workingDir/homebrewExportEnvVars.sh
  
  # Android: Mac specific
  if variableExists $ANDROID_HOME ; then
    launchctl setenv ANDROID_HOME $ANDROID_HOME
  fi
  
  # MacPorts
  export PATH=/opt/local/bin:$PATH
  export PATH=/opt/local/sbin:$PATH
  
  #-------------------------------------------------------------
  # Work specific
  ## SCM tool
  export PATH=/opt/jazz/scmtools/eclipse:$PATH
  ## NPM
  export NPM=`which npm`
  
  #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
  export SDKMAN_DIR="/Users/tokra/.sdkman"
  [[ -s "/Users/tokra/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/tokra/.sdkman/bin/sdkman-init.sh"
fi

# Android: General
if variableExists $ANDROID_HOME ; then
  #export PATH=$ANDROID_HOME/build-tools/19.1.0:$PATH
  export PATH=$ANDROID_HOME/platform-tools:$PATH
  export PATH=$ANDROID_HOME/tools:$PATH
fi
